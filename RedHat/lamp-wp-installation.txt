https://www.youtube.com/watch?v=nauT0dC9Bjo


# yum install httpd 

# yum install mariadb mariadb-server

# systemctl start mariadb

# systemctl enable mariadb

# systemctl status mariadb

[root@wp-rhel7 ~]# mysql_secure_installation

NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none):    <----------------- No password if installation was done just now
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] Y
New password:
Re-enter new password:
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] Y
 ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] Y
 ... Success!

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] Y
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] Y
 ... Success!

Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!
[root@wp-rhel7 ~]#


# systemctl restart mariadb

# yum install php


# yum install php-mysql

[root@wp-rhel7 html]# wget https://wordpress.org/latest.tar.gz <---------------------- Get the URL from google
--2020-11-23 00:45:38--  https://wordpress.org/latest.tar.gz
Resolving wordpress.org (wordpress.org)... 198.143.164.252
Connecting to wordpress.org (wordpress.org)|198.143.164.252|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 12987499 (12M) [application/octet-stream]
Saving to: ‘latest.tar.gz’

100%[========================================================================================================================================>] 12,987,499  24.0MB/s   in 0.5s

2020-11-23 00:45:39 (24.0 MB/s) - ‘latest.tar.gz’ saved [12987499/12987499]

[root@wp-rhel7 html]# ls
latest.tar.gz
[root@wp-rhel7 html]#


[root@wp-rhel7 html]# gunzip latest.tar.gz

[root@wp-rhel7 html]# tar -xvf latest.tar


[root@wp-rhel7 html]# cp -r wordpress/* /var/www/html/
[root@wp-rhel7 html]# ls
index.php   license.txt  wordpress        wp-admin            wp-comments-post.php  wp-content   wp-includes        wp-load.php   wp-mail.php      wp-signup.php     xmlrpc.php
latest.tar  readme.html  wp-activate.php  wp-blog-header.php  wp-config-sample.php  wp-cron.php  wp-links-opml.php  wp-login.php  wp-settings.php  wp-trackback.php
[root@wp-rhel7 html]#


[root@wp-rhel7 html]# rm -rf latest.tar
[root@wp-rhel7 html]# rm -rf wordpress


[root@wp-rhel7 html]# systemctl start httpd
[root@wp-rhel7 html]# systemctl enable httpd
Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.
[root@wp-rhel7 html]# systemctl status httpd
● httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)
   Active: active (running) since Mon 2020-11-23 00:51:38 UTC; 22s ago
     Docs: man:httpd(8)
           man:apachectl(8)
 Main PID: 14412 (httpd)
   Status: "Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec"
   CGroup: /system.slice/httpd.service
           ├─14412 /usr/sbin/httpd -DFOREGROUND
           ├─14414 /usr/sbin/httpd -DFOREGROUND
           ├─14415 /usr/sbin/httpd -DFOREGROUND
           ├─14416 /usr/sbin/httpd -DFOREGROUND
           ├─14417 /usr/sbin/httpd -DFOREGROUND
           └─14418 /usr/sbin/httpd -DFOREGROUND

Nov 23 00:51:37 wp-rhel7 systemd[1]: Starting The Apache HTTP Server...
Nov 23 00:51:38 wp-rhel7 systemd[1]: Started The Apache HTTP Server.
[root@wp-rhel7 html]#

[root@wp-rhel7 html]# systemctl status firewalld


[root@wp-rhel7 html]# systemctl status firewalld
● firewalld.service - firewalld - dynamic firewall daemon
   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)
   Active: inactive (dead) since Mon 2020-11-23 00:54:08 UTC; 7min ago
     Docs: man:firewalld(1)
  Process: 842 ExecStart=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS (code=exited, status=0/SUCCESS)
 Main PID: 842 (code=exited, status=0/SUCCESS)

Nov 23 00:21:20 localhost.localdomain systemd[1]: Starting firewalld - dynamic firewall daemon...
Nov 23 00:21:21 localhost.localdomain systemd[1]: Started firewalld - dynamic firewall daemon.
Nov 23 00:54:07 wp-rhel7 systemd[1]: Stopping firewalld - dynamic firewall daemon...
Nov 23 00:54:08 wp-rhel7 systemd[1]: Stopped firewalld - dynamic firewall daemon.

[root@wp-rhel7 html]# systemctl disable firewalld
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
[root@wp-rhel7 html]# iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
[root@wp-rhel7 html]#


[root@wp-rhel7 ~]# netstat -tulpn
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      1515/mysqld
tcp        0      0 0.0.0.0:25324           0.0.0.0:*               LISTEN      2369/ruby
tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      795/rpcbind
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1630/sshd
tcp6       0      0 :::111                  :::*                    LISTEN      795/rpcbind
tcp6       0      0 :::80                   :::*                    LISTEN      3301/httpd
tcp6       0      0 :::22                   :::*                    LISTEN      1630/sshd
udp        0      0 0.0.0.0:68              0.0.0.0:*                           922/dhclient
udp        0      0 0.0.0.0:111             0.0.0.0:*                           795/rpcbind
udp        0      0 127.0.0.1:323           0.0.0.0:*                           808/chronyd
udp        0      0 127.0.0.1:25224         0.0.0.0:*                           2369/ruby
udp        0      0 0.0.0.0:957             0.0.0.0:*                           795/rpcbind
udp6       0      0 :::111                  :::*                                795/rpcbind
udp6       0      0 ::1:323                 :::*                                808/chronyd
udp6       0      0 :::957                  :::*                                795/rpcbind
[root@wp-rhel7 ~]#

http://51.141.161.57/readme.html <------------ Chrome

Installation: Famous 5-minute install
Unzip the package in an empty directory and upload everything.
Open wp-admin/install.php in your browser. It will take you through the process to set up a wp-config.php file with your database connection details.
If for some reason this doesn’t work, don’t worry. It doesn’t work on all web hosts. Open up wp-config-sample.php with a text editor like WordPad or similar and fill in your database connection details.
Save the file as wp-config.php and upload it.
Open wp-admin/install.php in your browser.
Once the configuration file is set up, the installer will set up the tables needed for your site. If there is an error, double check your wp-config.php file, and try again. If it fails again, please go to the WordPress support forums with as much data as you can gather.
If you did not enter a password, note the password given to you. If you did not provide a username, it will be admin.
The installer should then send you to the login page. Sign in with the username and password you chose during the installation. If a password was generated for you, you can then click on “Profile” to change the password.


[root@wp-rhel7 wp]# mysql -u root -p
Enter password:
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 3
Server version: 5.5.68-MariaDB MariaDB Server

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> create database wp; <------------------------  Database name is wp
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> create user wp@localhost identified by 'R00tProd';
Query OK, 0 rows affected (0.00 sec)


MariaDB [(none)]> grant all privileges on wp.* to wp@localhost;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> flush privileges;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> quit
Bye


http://51.141.161.57/wp-admin/setup-config.php


http://51.141.161.57/wp-admin/update-core.php <--------------- Wordpress login page